"use strict";(self.webpackChunkef_website_template=self.webpackChunkef_website_template||[]).push([[870],{7750:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2022/12/02/arbeiten-am-numtrip","metadata":{"permalink":"/ef_info/2022/12/02/arbeiten-am-numtrip","editUrl":"https://github.com/No0ne155/ef_info/tree/main/blog/2022-12-02-arbeiten-am-numtrip.md","source":"@site/blog/2022-12-02-arbeiten-am-numtrip.md","title":"Arbeiten am Numtrip","description":"Besprechung Benutzereingaben","date":"2022-12-02T00:00:00.000Z","formattedDate":"2. Dezember 2022","tags":[],"readingTime":1.52,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"nextItem":{"title":"Wiedereinstieg Python","permalink":"/ef_info/2022/08/26/wiedereinstieg-python"}},"content":"## Besprechung Benutzereingaben\\n\\nIch verglich mit Thomas den Code, und wir beide verwenden ein sehr \xe4hnliches system, was die Besprechung kurz hielt.\\n\\n## Arbeiten Numtrip\\nAls erstes habe ich den Auftrag gelesen, und ausgef\xfchrt.\\nIch passte das Programm von Wikipedia auf mein Programm an. Der Code sah wie folgt aus:\\n```\\ndef checkandremove(x, y, oldvalue, newvalue):\\n    if spielfeld[x][y] == oldvalue:\\n        spielfeld[x][y] = newvalue\\n        checkandremove(x,y+1,oldvalue,newvalue)\\n        checkandremove(x,y-1,oldvalue,newvalue)\\n        checkandremove(x+1,y,oldvalue,newvalue)\\n        checkandremove(x-1,y,oldvalue,newvalue)\\n        game()\\n```\\nNach ein paar tests bemerkte ich, dass wenn z.b. `x` bereits `4` ist, und dann `x+1` \xfcberpr\xfcft wird, dies ausserhalb der liste ist. Deshalb \xe4nderte ich den code zu dem:\\n```\\ndef checkandremove(x, y, oldvalue, newvalue):\\n    if spielfeld[x][y] == oldvalue:\\n        spielfeld[x][y] = newvalue\\n        if y+1 <= 4:\\n            checkandremove(x,y+1,oldvalue,newvalue)\\n        if y-1 >= 0:\\n            checkandremove(x,y-1,oldvalue,newvalue)\\n        if x+1 >= 0:\\n            checkandremove(x+1,y,oldvalue,newvalue)\\n        if x-1 <= 4:\\n            checkandremove(x-1,y,oldvalue,newvalue)\\n        game()\\n```\\nNach weiteren Tests, fiel mir noch ein gr\xf6sseres noch nicht gel\xf6stes Problem auf.\\n\\n![](images/numtrip_problem0.png)\\n\\nNehmen wir dieses Feld. Wenn nun der Player den input `X = 1, Y = 1` eingibt, kommt dieses Feld heraus:\\n\\n![](images/numtrip_problem1.png)\\n\\nIch fragte mich warum. Nach dem Betrachten des Codes wusste ich es.\\nAuf dieser Darstellung zeige ich es.\\n\\n![](images/numtrip_problem2.png)\\n\\nAls erstes wird von `1, 1` aus nach rechts gepr\xfcft. Auf diesem Feld wird dann als n\xe4chstes nach unten gepr\xfcft, und danach nach rechts (wo kein passendes Feld ist), und danach nach links, wo die letzte 4 ist, die entfernt wird. Von diesem Feld aus wird nun in alle richtungen \xfcberpr\xfcft, jedoch keine 4 mehr entdeckt. Die auf dem Bild Blau markierten Pfeile sollten noch gepr\xfcft und entfernt werden, dies passiert jedoch nicht, aufgrund der reihenfolge im code.\\n\\nIch \xfcberlegte den rest der Zeit noch daran, fand jedoch keine L\xf6sung f\xfcr den Code. Jedoch kann man dieses Beispiel l\xf6sen, indem der Spieler die Position `X = 0, Y = 3` w\xe4hlt.\\n\\n### L\xf6sung wird gesucht!!!"},{"id":"/2022/08/26/wiedereinstieg-python","metadata":{"permalink":"/ef_info/2022/08/26/wiedereinstieg-python","editUrl":"https://github.com/No0ne155/ef_info/tree/main/blog/2022-08-26-wiedereinstieg-python.md","source":"@site/blog/2022-08-26-wiedereinstieg-python.md","title":"Wiedereinstieg Python","description":"Heute, beim 2. mal EF, haben wir wieder mit Python angefangen, und einen Theorieblock gehabt.","date":"2022-08-26T00:00:00.000Z","formattedDate":"26. August 2022","tags":[],"readingTime":0.685,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Arbeiten am Numtrip","permalink":"/ef_info/2022/12/02/arbeiten-am-numtrip"}},"content":"Heute, beim 2. mal EF, haben wir wieder mit Python angefangen, und einen Theorieblock gehabt.\\n## Theorieblock\\nIm Theorieblock haben wir __Programmiersprachen__ angeschaut. Vor allem wie sie aufgebaut sind in den __Sprachstufen__. Ich will nicht einfach die Website abschreiben, also hier der Link: [Programmiersprachen](https://ofi.gbsl.website/24ef/Programmieren/Programmiersprachen)\\n\\n## Python\\nWir haben angefangen mit __Turtle__ Python zu repetieren. Zum gl\xfcck ist noch mehr oder weniger alles Pr\xe4sent, jedoch gab es einige Tippfehler. Das liegt jedoch daran, dass die \xdcbung fehlt. Am meisten ging der `:` bei einer `for` Schleife vergessen. Am zweitmeisten passierte ein fehler beim tippen von `forward`, `left` oder `right`. Jedoch kann man ja einfach `fd`, `lt` oder `rt` verwenden, wodurch das sehr minimiert wurde. \\n\\n## Blog\\nAm schluss haben wir noch angefangen diesen Blog hier zu schreiben. Ich schreibe aber nicht gerne, weshalb er nicht sehr Kreativ ist."}]}')}}]);