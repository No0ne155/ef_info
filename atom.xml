<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://No0ne155.github.io/ef_info/</id>
    <title>Lern Blog Blog</title>
    <updated>2022-12-02T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://No0ne155.github.io/ef_info/"/>
    <subtitle>Lern Blog Blog</subtitle>
    <icon>https://No0ne155.github.io/ef_info/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Arbeiten am Numtrip]]></title>
        <id>/2022/12/02/arbeiten-am-numtrip</id>
        <link href="https://No0ne155.github.io/ef_info/2022/12/02/arbeiten-am-numtrip"/>
        <updated>2022-12-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Besprechung Benutzereingaben]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="besprechung-benutzereingaben">Besprechung Benutzereingaben<a class="hash-link" href="#besprechung-benutzereingaben" title="Direkter Link zur Überschrift">​</a></h2><p>Ich verglich mit Thomas den Code, und wir beide verwenden ein sehr ähnliches system, was die Besprechung kurz hielt.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="arbeiten-numtrip">Arbeiten Numtrip<a class="hash-link" href="#arbeiten-numtrip" title="Direkter Link zur Überschrift">​</a></h2><p>Als erstes habe ich den Auftrag gelesen, und ausgeführt.
Ich passte das Programm von Wikipedia auf mein Programm an. Der Code sah wie folgt aus:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">def checkandremove(x, y, oldvalue, newvalue):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if spielfeld[x][y] == oldvalue:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        spielfeld[x][y] = newvalue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        checkandremove(x,y+1,oldvalue,newvalue)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        checkandremove(x,y-1,oldvalue,newvalue)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        checkandremove(x+1,y,oldvalue,newvalue)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        checkandremove(x-1,y,oldvalue,newvalue)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        game()</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="In die Zwischenablage kopieren" title="Kopieren" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Nach ein paar tests bemerkte ich, dass wenn z.b. <code>x</code> bereits <code>4</code> ist, und dann <code>x+1</code> überprüft wird, dies ausserhalb der liste ist. Deshalb änderte ich den code zu dem:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">def checkandremove(x, y, oldvalue, newvalue):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if spielfeld[x][y] == oldvalue:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        spielfeld[x][y] = newvalue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if y+1 &lt;= 4:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            checkandremove(x,y+1,oldvalue,newvalue)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if y-1 &gt;= 0:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            checkandremove(x,y-1,oldvalue,newvalue)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if x+1 &gt;= 0:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            checkandremove(x+1,y,oldvalue,newvalue)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if x-1 &lt;= 4:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            checkandremove(x-1,y,oldvalue,newvalue)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        game()</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="In die Zwischenablage kopieren" title="Kopieren" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Nach weiteren Tests, fiel mir noch ein grösseres noch nicht gelöstes Problem auf.</p><p><img loading="lazy" src="/ef_info/assets/images/numtrip_problem0-b6318b38293e381cfead0c12709d08b6.png" width="584" height="529" class="img_ev3q"></p><p>Nehmen wir dieses Feld. Wenn nun der Player den input <code>X = 1, Y = 1</code> eingibt, kommt dieses Feld heraus:</p><p><img loading="lazy" src="/ef_info/assets/images/numtrip_problem1-f823644abc1c31114c4dd076011f5be7.png" width="590" height="529" class="img_ev3q"></p><p>Ich fragte mich warum. Nach dem Betrachten des Codes wusste ich es.
Auf dieser Darstellung zeige ich es.</p><p><img loading="lazy" src="/ef_info/assets/images/numtrip_problem2-857498581d2e084e0e33e5a17c56e943.png" width="589" height="535" class="img_ev3q"></p><p>Als erstes wird von <code>1, 1</code> aus nach rechts geprüft. Auf diesem Feld wird dann als nächstes nach unten geprüft, und danach nach rechts (wo kein passendes Feld ist), und danach nach links, wo die letzte 4 ist, die entfernt wird. Von diesem Feld aus wird nun in alle richtungen überprüft, jedoch keine 4 mehr entdeckt. Die auf dem Bild Blau markierten Pfeile sollten noch geprüft und entfernt werden, dies passiert jedoch nicht, aufgrund der reihenfolge im code.</p><p>Ich überlegte den rest der Zeit noch daran, fand jedoch keine Lösung für den Code. Jedoch kann man dieses Beispiel lösen, indem der Spieler die Position <code>X = 0, Y = 3</code> wählt.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="lösung-wird-gesucht">Lösung wird gesucht!!!<a class="hash-link" href="#lösung-wird-gesucht" title="Direkter Link zur Überschrift">​</a></h3>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Wiedereinstieg Python]]></title>
        <id>/2022/08/26/wiedereinstieg-python</id>
        <link href="https://No0ne155.github.io/ef_info/2022/08/26/wiedereinstieg-python"/>
        <updated>2022-08-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Heute, beim 2. mal EF, haben wir wieder mit Python angefangen, und einen Theorieblock gehabt.]]></summary>
        <content type="html"><![CDATA[<p>Heute, beim 2. mal EF, haben wir wieder mit Python angefangen, und einen Theorieblock gehabt.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="theorieblock">Theorieblock<a class="hash-link" href="#theorieblock" title="Direkter Link zur Überschrift">​</a></h2><p>Im Theorieblock haben wir <strong>Programmiersprachen</strong> angeschaut. Vor allem wie sie aufgebaut sind in den <strong>Sprachstufen</strong>. Ich will nicht einfach die Website abschreiben, also hier der Link: <a href="https://ofi.gbsl.website/24ef/Programmieren/Programmiersprachen" target="_blank" rel="noopener noreferrer">Programmiersprachen</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="python">Python<a class="hash-link" href="#python" title="Direkter Link zur Überschrift">​</a></h2><p>Wir haben angefangen mit <strong>Turtle</strong> Python zu repetieren. Zum glück ist noch mehr oder weniger alles Präsent, jedoch gab es einige Tippfehler. Das liegt jedoch daran, dass die Übung fehlt. Am meisten ging der <code>:</code> bei einer <code>for</code> Schleife vergessen. Am zweitmeisten passierte ein fehler beim tippen von <code>forward</code>, <code>left</code> oder <code>right</code>. Jedoch kann man ja einfach <code>fd</code>, <code>lt</code> oder <code>rt</code> verwenden, wodurch das sehr minimiert wurde. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="blog">Blog<a class="hash-link" href="#blog" title="Direkter Link zur Überschrift">​</a></h2><p>Am schluss haben wir noch angefangen diesen Blog hier zu schreiben. Ich schreibe aber nicht gerne, weshalb er nicht sehr Kreativ ist.</p>]]></content>
    </entry>
</feed>